{{>navbar }}

<div class="container team">
    <ul class="tabs">
        <li tabindex="0" class="tab active" role="tab">Cast</li>
        <li tabindex="0" class="tab" role="tab">Creative Team</li>
        <li tabindex="0" class="tab" role="tab">Crew</li>
    </ul>
    <section class="team-list">
        <ul class="team-group">
            {{#each everyone}}
            <li class="person {{#if image.secure_url}}has-img{{/if}}" data-category="{{category.name}}">
                {{#if image.secure_url}}
                <div class="img-wrapper">
                    <img src={{image.secure_url}} alt={{title}} />
                </div>
                {{/if}}
                <p class="name">{{name}}</p>
                {{#if role}}
                <p class="role">{{role}}</p>
                {{/if}}
                {{#if showMoreButton}}
                <button class="showAbout">About</button>
                {{/if}}
                {{#if link}}
                <a class="person-link" href="{{link}}">Website</a>
                {{/if}}
                {{#if bio}}
                <div class="bio">{{{bio}}}</div>
                {{/if}}
            </li>
            {{/each}}
        </ul>
        <div id="myModal" class="modal">
            <div id="modal-content">
                <button tabindex="0" class="close">&times;</button>
                <span class="blank"></span>
            </div>
        </div>
    </section>
</div>

<script>
    //Polyfill for closest
    if (!Element.prototype.matches)
        Element.prototype.matches = Element.prototype.msMatchesSelector ||
            Element.prototype.webkitMatchesSelector;

    if (!Element.prototype.closest) {
        Element.prototype.closest = function (s) {
            var el = this;
            if (!document.documentElement.contains(el)) return null;
            do {
                if (el.matches(s)) return el;
                el = el.parentElement || el.parentNode;
            } while (el !== null && el.nodeType === 1);
            return null;
        };
    }

    const filterTeam = (tag) => {
        document.querySelectorAll(".person").forEach(function (person) {
            if (person.dataset.category === tag) {
                person.style.display = "block";
            } else {
                person.style.display = "none";
            }
        })
    }

    filterTeam(document.querySelector(".active.tab").textContent);

    document.querySelector('body').addEventListener('click', function (event) {
        //Modal stuff
        if (event.target.matches('.person') || event.target.matches('.person *')) {
            var modal = document.getElementById('myModal');
            var modalContent = document.getElementById('modal-content');
            modal.style.display = "flex";
            document.querySelector("#modal-content .blank").innerHTML = `<div class="person">${event.target.closest('.person').innerHTML}</div>`;
            document.querySelector(".close").focus();
        }
        if (event.target.matches('.close') || event.target.matches('.modal')) {
            var modal = document.getElementById('myModal');
            modal.style.display = "none";
        }

        //Tab stuff
        if (event.target.matches('.tab:not(.active)')) {
            //remove active class from tabs
            const activeTab = document.querySelector('.tab.active');
            activeTab.classList.remove('active');

            //add active class to clicked tabs
            event.target.classList.add("active");
            filterTeam(event.target.textContent);
        }
    })





</script>